&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Год=Год(ТекущаяДатаСеанса());
	ДатаОтсчета=НачалоГода(ТекущаяДата());
	Если Параметры.Ключ.Пустая() Тогда
		ЗаполнитьШаблонДанныхОРабочихЧасах();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	Если Параметры.Ключ.Пустая() или ЭтаФорма.Модифицированность Тогда
		итWMSОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо  записать график");
		Возврат;
	КонецЕсли;
	Оповещение=новый ОписаниеОповещения("ЗаполнитьГрафикОповещения",ЭтаФорма);
	ПоказатьВопрос(Оповещение,"Старые данные попавшие на указанный период будут перезаписаны. Продолжить?"
	,РежимДиалогаВопрос.ДаНет );
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьГрафикОповещения(Результат,Параметры) Экспорт
	Если Результат=КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	Если Объект.СменныйГрафик Тогда 
		ЗаполнитьДанныеГрафикаСменаНаСервере();
	иначе
		ЗаполнитьДанныеГрафикаНедельныйНаСервере();
	КонецЕсли;
	ТабДок=новый ТабличныйДокумент;
	ЗаполнитьМакетГрафика(ТабДок);
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьДанныеГрафикаНедельныйНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеПроизводственногоКалендаря.Дата КАК Дата,
	|	ДанныеПроизводственногоКалендаря.Год КАК Год,
	|	ДанныеПроизводственногоКалендаря.ВидДня КАК ВидДня
	|ИЗ
	|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|ГДЕ
	|	ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь = &ПроизводственныйКалендарь";
	
	Запрос.УстановитьПараметр("ПроизводственныйКалендарь", Объект.ПроизводственныйКалендарь);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НаборЗаписей=РегистрыСведений.ГрафикиРаботыПоВидамВремени.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ГрафикРаботы.Установить(Объект.Ссылка);
		НаборЗаписей.Отбор.Месяц.Установить(НачалоМесяца(ВыборкаДетальныеЗаписи.Дата));
		НаборЗаписей.Отбор.Дата.Установить(ВыборкаДетальныеЗаписи.Дата);
		НаборЗаписей.Прочитать();
		НаборЗаписей.Очистить();
		ДеньЦикла=ДеньНедели(ВыборкаДетальныеЗаписи.Дата);
		
		МассивДанныхЦикла=ПолучитьДанныеДняЦикла(ДеньЦикла);
		Если ВыборкаДетальныеЗаписи.Дата<ДатаОтсчета Тогда 
			НоваяЗапись=НаборЗаписей.Добавить();
			НоваяЗапись.ГрафикРаботы=Объект.Ссылка;
			НоваяЗапись.Месяц=НачалоМесяца(ВыборкаДетальныеЗаписи.Дата);
			НоваяЗапись.ВидУчетаВремени=Справочники.ВидыИспользованияРабочегоВремени.ВыходныеДни;
			НоваяЗапись.Дата=ВыборкаДетальныеЗаписи.Дата;
			НоваяЗапись.ОсновноеЗначение=1;
			НоваяЗапись.ОсновноеЗначениеНорма=1;
			Продолжить;
		КонецЕсли;
		Если ВыборкаДетальныеЗаписи.ВидДня=Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник Тогда 
			НоваяЗапись=НаборЗаписей.Добавить();
			НоваяЗапись.ГрафикРаботы=Объект.Ссылка;
			НоваяЗапись.Месяц=НачалоМесяца(ВыборкаДетальныеЗаписи.Дата);
			НоваяЗапись.ВидУчетаВремени=Справочники.ВидыИспользованияРабочегоВремени.ВыходныеДни;
			НоваяЗапись.Дата=ВыборкаДетальныеЗаписи.Дата;
			НоваяЗапись.ОсновноеЗначение=1;
			НоваяЗапись.ОсновноеЗначениеНорма=1;
		ИначеЕсли ВыборкаДетальныеЗаписи.ВидДня=Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный Тогда
			РабочееВремя=МассивДанныхЦикла.Количество()-1;
			Если МассивДанныхЦикла[0].Часов>=1 Тогда 
				МассивДанныхЦикла[0].Часов =МассивДанныхЦикла[0].Часов-1;
				МассивДанныхЦикла[РабочееВремя].Часов=МассивДанныхЦикла[РабочееВремя].Часов-1;
			КонецЕсли;	
			Для Каждого стр из МассивДанныхЦикла Цикл 
				НоваяЗапись=НаборЗаписей.Добавить();
				НоваяЗапись.ГрафикРаботы=Объект.Ссылка;
				НоваяЗапись.Месяц=НачалоМесяца(ВыборкаДетальныеЗаписи.Дата);
				НоваяЗапись.ВидУчетаВремени=стр.ВидВремени;
				НоваяЗапись.Дата=ВыборкаДетальныеЗаписи.Дата;
				НоваяЗапись.ОсновноеЗначение=1;
				НоваяЗапись.ОсновноеЗначениеНорма=1;
				НоваяЗапись.ДополнительноеЗначение=стр.Часов;
				НоваяЗапись.ДополнительноеЗначениеНорма=стр.Часов;
			КонецЦикла;
			
		иначе
			Для Каждого стр из МассивДанныхЦикла Цикл 
				НоваяЗапись=НаборЗаписей.Добавить();
				НоваяЗапись.ГрафикРаботы=Объект.Ссылка;
				НоваяЗапись.Месяц=НачалоМесяца(ВыборкаДетальныеЗаписи.Дата);
				НоваяЗапись.ВидУчетаВремени=стр.ВидВремени;
				НоваяЗапись.Дата=ВыборкаДетальныеЗаписи.Дата;
				НоваяЗапись.ОсновноеЗначение=1;
				НоваяЗапись.ОсновноеЗначениеНорма=1;
				НоваяЗапись.ДополнительноеЗначение=стр.Часов;
				НоваяЗапись.ДополнительноеЗначениеНорма=стр.Часов;
			КонецЦикла;
		КонецЕсли;
		НаборЗаписей.Записать();
	КонецЦикла;

	КонецПроцедуры


&НаСервере
Процедура ЗаполнитьДанныеГрафикаСменаНаСервере()
	
	ДнейЦикла=КоличествоДнейЦиклаГрафика();
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеПроизводственногоКалендаря.Дата КАК Дата,
		|	ДанныеПроизводственногоКалендаря.Год КАК Год,
		|	ДанныеПроизводственногоКалендаря.ВидДня КАК ВидДня
		|ИЗ
		|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
		|ГДЕ
		|	ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь = &ПроизводственныйКалендарь";
	
	Запрос.УстановитьПараметр("ПроизводственныйКалендарь", Объект.ПроизводственныйКалендарь);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НаборЗаписей=РегистрыСведений.ГрафикиРаботыПоВидамВремени.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ГрафикРаботы.Установить(Объект.Ссылка);
		НаборЗаписей.Отбор.Месяц.Установить(НачалоМесяца(ВыборкаДетальныеЗаписи.Дата));
		НаборЗаписей.Отбор.Дата.Установить(ВыборкаДетальныеЗаписи.Дата);
		НаборЗаписей.Прочитать();
		НаборЗаписей.Очистить();
		ДеньЦикла=ДеньЦиклаПоГраффику(ВыборкаДетальныеЗаписи.дата,ДнейЦикла);
				
		МассивДанныхЦикла=ПолучитьДанныеДняЦикла(ДеньЦикла);
		Если МассивДанныхЦикла.Количество()=0 Тогда 
		НоваяЗапись=НаборЗаписей.Добавить();
		НоваяЗапись.ГрафикРаботы=Объект.Ссылка;
		НоваяЗапись.Месяц=НачалоМесяца(ВыборкаДетальныеЗаписи.Дата);
		НоваяЗапись.ВидУчетаВремени=Справочники.ВидыИспользованияРабочегоВремени.ВыходныеДни;
		НоваяЗапись.Дата=ВыборкаДетальныеЗаписи.Дата;
		НоваяЗапись.ОсновноеЗначение=1;
		НоваяЗапись.ОсновноеЗначениеНорма=1;
		КонецЕсли;
		Для Каждого стр из МассивДанныхЦикла Цикл 
		НоваяЗапись=НаборЗаписей.Добавить();
		НоваяЗапись.ГрафикРаботы=Объект.Ссылка;
		НоваяЗапись.Месяц=НачалоМесяца(ВыборкаДетальныеЗаписи.Дата);
		НоваяЗапись.ВидУчетаВремени=стр.ВидВремени;
		НоваяЗапись.Дата=ВыборкаДетальныеЗаписи.Дата;
		НоваяЗапись.ОсновноеЗначение=1;
		НоваяЗапись.ОсновноеЗначениеНорма=1;
		НоваяЗапись.ДополнительноеЗначение=стр.Часов;
        НоваяЗапись.ДополнительноеЗначениеНорма=стр.Часов;
	КонецЦикла;
	НаборЗаписей.Записать();
	КонецЦикла;
	

	
КонецПроцедуры

Функция ПолучитьДанныеДняЦикла(ДеньЦиклаПоиска)
	Если ДеньЦиклаПоиска = Неопределено Тогда 
		Возврат новый Массив;
	КонецЕсли;	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ГрафикиРаботыСотрудниковДанныеОРабочихЧасах.ВидВремени КАК ВидВремени,
		|	ГрафикиРаботыСотрудниковДанныеОРабочихЧасах.Часов КАК Часов
		|ИЗ
		|	Справочник.ГрафикиРаботыСотрудников.ДанныеОРабочихЧасах КАК ГрафикиРаботыСотрудниковДанныеОРабочихЧасах
		|ГДЕ
		|	ГрафикиРаботыСотрудниковДанныеОРабочихЧасах.НомерДняЦикла = &НомерДняЦикла
		|	И ГрафикиРаботыСотрудниковДанныеОРабочихЧасах.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("НомерДняЦикла", ДеньЦиклаПоиска);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	МассивДанных=новый Массив;
	Часов=0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтруктураДанных=новый Структура;
		СтруктураДанных.Вставить("ВидВремени",ВыборкаДетальныеЗаписи.ВидВремени);
		СтруктураДанных.Вставить("Часов",ВыборкаДетальныеЗаписи.Часов);
		Часов=Часов+ВыборкаДетальныеЗаписи.Часов;
		МассивДанных.Добавить(СтруктураДанных);
	КонецЦикла;
	Если Часов>0 Тогда 
		СтруктураДанных=новый Структура;
		СтруктураДанных.Вставить("ВидВремени",Справочники.ВидыИспользованияРабочегоВремени.РабочееВремя);
		СтруктураДанных.Вставить("Часов",Часов);
		МассивДанных.Добавить(СтруктураДанных);
	КонецЕсли;
	Возврат МассивДанных;
	
	
	КонецФункции

Функция ДеньЦиклаПоГраффику(ДатаДня,ДнейЦикла)
	Если ДатаОтсчета>ДатаДня Тогда 
		Возврат Неопределено;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РАЗНОСТЬДАТ(&ДатаОтсчета, &ДатаДня, ДЕНЬ) КАК КоличествоДней";
	
	Запрос.УстановитьПараметр("ДатаДня", ДатаДня);
	Запрос.УстановитьПараметр("ДатаОтсчета", ДатаОтсчета);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	КоличествоДнейОтначалаОтсчета=0;
	Если  ВыборкаДетальныеЗаписи.Следующий() Тогда 
	КоличествоДнейОтначалаОтсчета=ВыборкаДетальныеЗаписи.КоличествоДней	
КонецЕсли;
Если КоличествоДнейОтначалаОтсчета< ДнейЦикла Тогда 
	Возврат КоличествоДнейОтначалаОтсчета+1;
	иначе
	Делитель=КоличествоДнейОтначалаОтсчета/ДнейЦикла;
	ЦелоеДелителя=Цел(Делитель);
	Возврат (КоличествоДнейОтначалаОтсчета-ДнейЦикла*ЦелоеДелителя)+1;
КонецЕсли;
Возврат Неопределено;


КонецФункции

Функция КоличествоДнейЦиклаГрафика()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(ГрафикиРаботыСотрудниковДанныеОРабочихЧасах.НомерДняЦикла) КАК НомерДняЦикла
		|ИЗ
		|	Справочник.ГрафикиРаботыСотрудников.ДанныеОРабочихЧасах КАК ГрафикиРаботыСотрудниковДанныеОРабочихЧасах
		|ГДЕ
		|	ГрафикиРаботыСотрудниковДанныеОРабочихЧасах.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.НомерДняЦикла;
	КонецЦикла;
	
	    Возврат 0;
	
	КонецФункции
	
&НаКлиенте
Процедура СменныйГрафикПриИзменении(Элемент)

	Если Параметры.Ключ.Пустая() Тогда
		ЗаполнитьШаблонДанныхОРабочихЧасах();
		ВидимостьДоступностьЭлементов();
	Иначе
		Оповещение=новый ОписаниеОповещения("СменаГрафикаРезультат",ЭтаФорма);
		ПоказатьВопрос(Оповещение,"Задать новый шаблон табличной части?",РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура СменаГрафикаРезультат(Результат,Параметры) Экспорт
	Если Результат=КодВозвратаДиалога.Да Тогда
		ЗаполнитьШаблонДанныхОРабочихЧасах();
	КонецЕсли;
	ВидимостьДоступностьЭлементов();
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьШаблонДанныхОРабочихЧасах()
	Объект.ДанныеОРабочихЧасах.Очистить();
	Если Объект.СменныйГрафик Тогда
		Возврат;
	КонецЕсли;
Счетчик=1;
Пока Счетчик<=7 Цикл
	НоваяСтрока=Объект.ДанныеОРабочихЧасах.Добавить();
	НоваяСтрока.НомерДняЦикла=Счетчик;
	НоваяСтрока.ДеньНедели=ДеньНеделиСтрокой(НоваяСтрока.НомерДняЦикла);
	Счетчик=Счетчик+1;
КонецЦикла;
КонецПроцедуры
&НаСервере
Функция ДеньНеделиСтрокой(Число)
	Если Число=1 Тогда
		Возврат "Пн";
	ИначеЕсли Число=2 Тогда
		Возврат "Вт";
	ИначеЕсли Число=3 Тогда
		Возврат "Ср";
	ИначеЕсли Число=4 Тогда
		Возврат "Чт";
	ИначеЕсли Число=5 Тогда
		Возврат "Пт";
	ИначеЕсли Число=6 Тогда
		Возврат "Сб";
	Иначе
		Возврат "Вс";
	КонецЕсли;
КонецФункции
&НаКлиенте
Процедура ВидимостьДоступностьЭлементов()
	Если Объект.СменныйГрафик Тогда
		Элементы.ДанныеОРабочихЧасахДеньНедели.Видимость=Ложь;
	иначе
		Элементы.ДанныеОРабочихЧасахДеньНедели.Видимость=Истина;
	КонецЕсли;
КонецПроцедуры
&НаСервере
Процедура ЗаполнитьМакетГрафика(ТабличныйДокумент)
	Данные=РеквизитФормыВЗначение("Объект");
	Данные.ЗаполнитьТабличныйДокументГрафика(ТабличныйДокумент,Год);
	ТаблицаГрафика.Очистить();
	ТаблицаГрафика.Вывести(ТабличныйДокумент);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ТабДок=новый ТабличныйДокумент;
	ЗаполнитьМакетГрафика(ТабДок);
КонецПроцедуры

&НаКлиенте
Процедура ГодПриИзменении(Элемент)
	ТабДок=новый ТабличныйДокумент;
	ЗаполнитьМакетГрафика(ТабДок);
КонецПроцедуры
