
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Ключ.Пустая() Тогда
		Если Объект.Организация.Пустая() Тогда
			ОбщегоНазначения.УстановитьОрганизациюВДокументе(Объект);
		КонецЕсли;
		Объект.Ответственный=ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	Если Объект.Месяц<>'00010101' Тогда
		МесяцСтрокой=Формат(Объект.Месяц, "ДФ='ММММ гггг'");
	КонецЕсли;
	ЗаполнитьТабличныйДокументТаблея();
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОткрытьФорму("ОбщаяФорма.ВыборПериода",новый Структура("Год",Год(Объект.Дата)),Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	МесяцСтрокой=Формат(ВыбранноеЗначение, "ДФ='ММММ гггг'");
	Объект.Месяц=ВыбранноеЗначение;
	Объект.ДатаНачалаПериода=НачалоМесяца(ВыбранноеЗначение);
	Объект.ДатаОкончанияПериода=КонецМесяца(ВыбранноеЗначение);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеПроизводственногоКалендаря.Дата КАК Дата
		|ПОМЕСТИТЬ ВтДанныеКалендаря
		|ИЗ
		|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
		|ГДЕ
		|	ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь = &ПроизводственныйКалендарь
		|	И ДанныеПроизводственногоКалендаря.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеПроизводственногоКалендаря.Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КадровыеИзмененияРаботниковСкладаСрезПоследних.РаботникСклада КАК РаботникСклада,
		|	КадровыеИзмененияРаботниковСкладаСрезПоследних.Организация КАК Организация,
		|	КадровыеИзмененияРаботниковСкладаСрезПоследних.Подразделение КАК Подразделение,
		|	КадровыеИзмененияРаботниковСкладаСрезПоследних.Должность КАК Должность
		|ПОМЕСТИТЬ СотрудникиПодразделения
		|ИЗ
		|	РегистрСведений.КадровыеИзмененияРаботниковСклада.СрезПоследних(&ДатаОкончания, ) КАК КадровыеИзмененияРаботниковСкладаСрезПоследних
		|ГДЕ
		|	КадровыеИзмененияРаботниковСкладаСрезПоследних.Организация = &Организация
		|	И КадровыеИзмененияРаботниковСкладаСрезПоследних.Подразделение = &Подразделение
		|	И КадровыеИзмененияРаботниковСкладаСрезПоследних.ПризнакАктивности
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СотрудникиПодразделения.РаботникСклада КАК РаботникСклада,
		|	СотрудникиПодразделения.Организация КАК Организация,
		|	СотрудникиПодразделения.Подразделение КАК Подразделение,
		|	СотрудникиПодразделения.Должность КАК Должность,
		|	ВтДанныеКалендаря.Дата КАК ДеньКалендаря
		|ПОМЕСТИТЬ ДанныеСотрудниковПоднямКалендаря
		|ИЗ
		|	СотрудникиПодразделения КАК СотрудникиПодразделения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДанныеКалендаря КАК ВтДанныеКалендаря
		|		ПО (ИСТИНА)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ГрафикРаботыСотрудников.Период) КАК Период,
		|	ГрафикРаботыСотрудников.Сотрудник КАК Сотрудник,
		|	ГрафикРаботыСотрудников.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ДанныеСотрудниковПоднямКалендаря.ДеньКалендаря КАК ДеньКалендаря
		|ПОМЕСТИТЬ ДатаИзмененияГрафикаСотрудника
		|ИЗ
		|	ДанныеСотрудниковПоднямКалендаря КАК ДанныеСотрудниковПоднямКалендаря
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикРаботыСотрудников КАК ГрафикРаботыСотрудников
		|		ПО ДанныеСотрудниковПоднямКалендаря.РаботникСклада = ГрафикРаботыСотрудников.Сотрудник
		|			И ДанныеСотрудниковПоднямКалендаря.Организация = ГрафикРаботыСотрудников.ГоловнаяОрганизация
		|			И ДанныеСотрудниковПоднямКалендаря.ДеньКалендаря >= ГрафикРаботыСотрудников.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ГрафикРаботыСотрудников.Сотрудник,
		|	ГрафикРаботыСотрудников.ГоловнаяОрганизация,
		|	ДанныеСотрудниковПоднямКалендаря.ДеньКалендаря
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДатаИзмененияГрафикаСотрудника.Сотрудник КАК Сотрудник,
		|	ДатаИзмененияГрафикаСотрудника.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	ДатаИзмененияГрафикаСотрудника.ДеньКалендаря КАК ДеньКалендаря,
		|	ГрафикРаботыСотрудников.ГрафикРаботы КАК ГрафикРаботы
		|ПОМЕСТИТЬ ГрафикиРаботыПоДням
		|ИЗ
		|	ДатаИзмененияГрафикаСотрудника КАК ДатаИзмененияГрафикаСотрудника
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикРаботыСотрудников КАК ГрафикРаботыСотрудников
		|		ПО ДатаИзмененияГрафикаСотрудника.Период = ГрафикРаботыСотрудников.Период
		|			И ДатаИзмененияГрафикаСотрудника.Сотрудник = ГрафикРаботыСотрудников.Сотрудник
		|			И ДатаИзмененияГрафикаСотрудника.ГоловнаяОрганизация = ГрафикРаботыСотрудников.ГоловнаяОрганизация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеСотрудниковПоднямКалендаря.РаботникСклада КАК РаботникСклада,
		|	ДанныеСотрудниковПоднямКалендаря.Организация КАК Организация,
		|	ДанныеСотрудниковПоднямКалендаря.Подразделение КАК Подразделение,
		|	ДанныеСотрудниковПоднямКалендаря.Должность КАК Должность,
		|	ДанныеСотрудниковПоднямКалендаря.ДеньКалендаря КАК ДеньКалендаря,
		|	ГрафикиРаботыПоДням.ГрафикРаботы КАК ГрафикРаботы
		|ПОМЕСТИТЬ ДанныеСотрудниковИГрафиков
		|ИЗ
		|	ДанныеСотрудниковПоднямКалендаря КАК ДанныеСотрудниковПоднямКалендаря
		|		ЛЕВОЕ СОЕДИНЕНИЕ ГрафикиРаботыПоДням КАК ГрафикиРаботыПоДням
		|		ПО ДанныеСотрудниковПоднямКалендаря.РаботникСклада = ГрафикиРаботыПоДням.Сотрудник
		|			И ДанныеСотрудниковПоднямКалендаря.Организация = ГрафикиРаботыПоДням.ГоловнаяОрганизация
		|			И ДанныеСотрудниковПоднямКалендаря.ДеньКалендаря = ГрафикиРаботыПоДням.ДеньКалендаря
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.РаботникСклада КАК РаботникСклада,
		|	ВложенныйЗапрос.Организация КАК Организация,
		|	ВложенныйЗапрос.Подразделение КАК Подразделение,
		|	ВложенныйЗапрос.Должность КАК Должность,
		|	ВложенныйЗапрос.ДеньКалендаря КАК ДеньКалендаря,
		|	ВложенныйЗапрос.ГрафикРаботы КАК ГрафикРаботы,
		|	СостоянияРаботниковСклада.Состояние КАК Состояние,
		|	СостоянияРаботниковСклада.ВидВремени КАК ВидВремени
		|ПОМЕСТИТЬ ДанныеСотрудниковИСостояния
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДанныеСотрудниковИГрафиков.РаботникСклада КАК РаботникСклада,
		|		ДанныеСотрудниковИГрафиков.Организация КАК Организация,
		|		ДанныеСотрудниковИГрафиков.Подразделение КАК Подразделение,
		|		ДанныеСотрудниковИГрафиков.Должность КАК Должность,
		|		ДанныеСотрудниковИГрафиков.ДеньКалендаря КАК ДеньКалендаря,
		|		ДанныеСотрудниковИГрафиков.ГрафикРаботы КАК ГрафикРаботы,
		|		МАКСИМУМ(СостоянияРаботниковСклада.Период) КАК Период
		|	ИЗ
		|		ДанныеСотрудниковИГрафиков КАК ДанныеСотрудниковИГрафиков
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияРаботниковСклада КАК СостоянияРаботниковСклада
		|			ПО ДанныеСотрудниковИГрафиков.РаботникСклада = СостоянияРаботниковСклада.РаботникСклада
		|				И ДанныеСотрудниковИГрафиков.Организация = СостоянияРаботниковСклада.Организация
		|				И ДанныеСотрудниковИГрафиков.ДеньКалендаря >= СостоянияРаботниковСклада.Период
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ДанныеСотрудниковИГрафиков.РаботникСклада,
		|		ДанныеСотрудниковИГрафиков.Организация,
		|		ДанныеСотрудниковИГрафиков.Подразделение,
		|		ДанныеСотрудниковИГрафиков.Должность,
		|		ДанныеСотрудниковИГрафиков.ДеньКалендаря,
		|		ДанныеСотрудниковИГрафиков.ГрафикРаботы) КАК ВложенныйЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияРаботниковСклада КАК СостоянияРаботниковСклада
		|		ПО ВложенныйЗапрос.РаботникСклада = СостоянияРаботниковСклада.РаботникСклада
		|			И ВложенныйЗапрос.Организация = СостоянияРаботниковСклада.Организация
		|			И ВложенныйЗапрос.Период = СостоянияРаботниковСклада.Период
		|ГДЕ
		|	СостоянияРаботниковСклада.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Увольнение)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеСотрудниковИСостояния.РаботникСклада КАК РаботникСклада,
		|	ДанныеСотрудниковИСостояния.Организация КАК Организация,
		|	ДанныеСотрудниковИСостояния.Подразделение КАК Подразделение,
		|	ДанныеСотрудниковИСостояния.Должность КАК Должность,
		|	ДанныеСотрудниковИСостояния.ДеньКалендаря КАК ДеньКалендаря,
		|	ДанныеСотрудниковИСостояния.ГрафикРаботы КАК ГрафикРаботы,
		|	ДанныеСотрудниковИСостояния.Состояние КАК Состояние,
		|	ДанныеСотрудниковИСостояния.ВидВремени КАК ВидВремениПоСостоянию,
		|	СУММА(ЕСТЬNULL(ГрафикиРаботыПоВидамВремени.ДополнительноеЗначение, 0)) КАК РабочихЧасовПлан,
		|	ЕСТЬNULL(ГрафикиРаботыПоВидамВремени.ВидУчетаВремени, НЕОПРЕДЕЛЕНО) КАК ВидУчетаВремени
		|ПОМЕСТИТЬ ДанныеТабеляПоГрафику
		|ИЗ
		|	ДанныеСотрудниковИСостояния КАК ДанныеСотрудниковИСостояния
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
		|		ПО ДанныеСотрудниковИСостояния.ГрафикРаботы = ГрафикиРаботыПоВидамВремени.ГрафикРаботы
		|			И ДанныеСотрудниковИСостояния.ДеньКалендаря = ГрафикиРаботыПоВидамВремени.Дата
		|ГДЕ
		|	ГрафикиРаботыПоВидамВремени.ВидУчетаВремени В (ЗНАЧЕНИЕ(Справочник.ВидыИспользованияРабочегоВремени.РабочееВремя), ЗНАЧЕНИЕ(Справочник.ВидыИспользованияРабочегоВремени.ВыходныеДни))
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеСотрудниковИСостояния.РаботникСклада,
		|	ДанныеСотрудниковИСостояния.Организация,
		|	ДанныеСотрудниковИСостояния.Подразделение,
		|	ДанныеСотрудниковИСостояния.Должность,
		|	ДанныеСотрудниковИСостояния.ДеньКалендаря,
		|	ДанныеСотрудниковИСостояния.ГрафикРаботы,
		|	ДанныеСотрудниковИСостояния.Состояние,
		|	ДанныеСотрудниковИСостояния.ВидВремени,
		|	ЕСТЬNULL(ГрафикиРаботыПоВидамВремени.ВидУчетаВремени, НЕОПРЕДЕЛЕНО)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеТабеляПоГрафику.РаботникСклада КАК РаботникСклада,
		|	ДанныеТабеляПоГрафику.Организация КАК Организация,
		|	ДанныеТабеляПоГрафику.Подразделение КАК Подразделение,
		|	ДанныеТабеляПоГрафику.Должность КАК Должность,
		|	ДанныеТабеляПоГрафику.ДеньКалендаря КАК ДеньКалендаря,
		|	ДанныеТабеляПоГрафику.ГрафикРаботы КАК ГрафикРаботы,
		|	ДанныеТабеляПоГрафику.Состояние КАК Состояние,
		|	ДанныеТабеляПоГрафику.ВидВремениПоСостоянию КАК ВидВремениПоСостоянию,
		|	ДанныеТабеляПоГрафику.РабочихЧасовПлан КАК РабочихЧасовПлан,
		|	ДанныеТабеляПоГрафику.ВидУчетаВремени КАК ВидУчетаВремени,
		|	СУММА(ЕСТЬNULL(ФактическиеДанныеОЧасахРаботников.КоличествоЧасов, 0)) КАК РабочихЧасовФакт
		|ИЗ
		|	ДанныеТабеляПоГрафику КАК ДанныеТабеляПоГрафику
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФактическиеДанныеОЧасахРаботников КАК ФактическиеДанныеОЧасахРаботников
		|		ПО ДанныеТабеляПоГрафику.РаботникСклада = ФактическиеДанныеОЧасахРаботников.РаботникСклада
		|			И ДанныеТабеляПоГрафику.Организация = ФактическиеДанныеОЧасахРаботников.Организация
		|			И ДанныеТабеляПоГрафику.ДеньКалендаря = ФактическиеДанныеОЧасахРаботников.Дата
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеТабеляПоГрафику.РаботникСклада,
		|	ДанныеТабеляПоГрафику.Организация,
		|	ДанныеТабеляПоГрафику.Подразделение,
		|	ДанныеТабеляПоГрафику.Должность,
		|	ДанныеТабеляПоГрафику.ДеньКалендаря,
		|	ДанныеТабеляПоГрафику.ГрафикРаботы,
		|	ДанныеТабеляПоГрафику.Состояние,
		|	ДанныеТабеляПоГрафику.ВидВремениПоСостоянию,
		|	ДанныеТабеляПоГрафику.РабочихЧасовПлан,
		|	ДанныеТабеляПоГрафику.ВидУчетаВремени
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организация,
		|	Подразделение,
		|	РаботникСклада,
		|	ДеньКалендаря
		|ИТОГИ
		|	МАКСИМУМ(Должность),
		|	СУММА(РабочихЧасовПлан),
		|	СУММА(РабочихЧасовФакт)
		|ПО
		|	РаботникСклада";
	
	Запрос.УстановитьПараметр("ДатаНачала", Объект.ДатаНачалаПериода);
	Запрос.УстановитьПараметр("ДатаОкончания", Объект.ДатаОкончанияПериода);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.УстановитьПараметр("ПроизводственныйКалендарь", Справочники.ПроизводственныеКалендари.РегламентированныйПроизводственныйКалендарь);
		
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаСотрудник = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Объект.ДанныеОВремени.Очистить();
	Пока ВыборкаСотрудник.Следующий() Цикл
		НоваяСтрока=Объект.ДанныеОВремени.Добавить();
		НоваяСтрока.Сотрудник=ВыборкаСотрудник.РаботникСклада;
		НоваяСтрока.Должность=ВыборкаСотрудник.Должность;
		НоваяСтрока.ЧасовПлан=ВыборкаСотрудник.РабочихЧасовПлан;
		НоваяСтрока.ЧасовФакт=ВыборкаСотрудник.РабочихЧасовФакт;
		ВыборкаДетальныеЗаписи=ВыборкаСотрудник.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		    Если ВыборкаДетальныеЗаписи.ВидУчетаВремени=Неопределено Тогда 
					Продолжить;
			КонецЕсли;	
			ДеньМесяца=Строка(День(ВыборкаДетальныеЗаписи.ДеньКалендаря));
			Если ВыборкаДетальныеЗаписи.Состояние<>Перечисления.СостоянияСотрудника.Работа Тогда 
				НоваяСтрока["Часов"+ДеньМесяца]=ВыборкаДетальныеЗаписи.РабочихЧасовФакт;
				НоваяСтрока["ВидВремени"+ДеньМесяца]=ВыборкаДетальныеЗаписи.ВидВремениПоСостоянию;
			иначе 
				Если ВыборкаДетальныеЗаписи.РабочихЧасовПлан>0 и  ВыборкаДетальныеЗаписи.РабочихЧасовФакт=0 Тогда 
					НоваяСтрока["Часов"+ДеньМесяца]=ВыборкаДетальныеЗаписи.РабочихЧасовФакт;
					НоваяСтрока["ВидВремени"+ДеньМесяца] = Справочники.ВидыИспользованияРабочегоВремени.НеоплачиваемыйДополнительныйОтпуск;
				иначе
					НоваяСтрока["Часов"+ДеньМесяца]=ВыборкаДетальныеЗаписи.РабочихЧасовФакт;
					НоваяСтрока["ВидВремени"+ДеньМесяца] = ВыборкаДетальныеЗаписи.ВидУчетаВремени;
				КонецЕсли; 
			КонецЕсли;				
		КонецЦикла;		
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
	ЗаполнитьТабличныйДокументТаблея();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТабличныйДокументТаблея()
    ТаблицаТабеля.Очистить();
	Макет=Документы.ТабельУчетаРабочегоВремени.ПолучитьМакет("МакетПредставленияТабеля");
	ДнейМесяца=День(КонецМесяца(Объект.Месяц));
	Шапка=Макет.ПолучитьОбласть("Шапка");
	ТаблицаТабеля.Вывести(Шапка);
	НомерСтроки=0;
	Для Каждого стр из Объект.ДанныеОВремени Цикл 
		НомерСтроки=НомерСтроки+1;
		ОбластьСтрока=Макет.ПолучитьОбласть("ВидВремени");
		ОбластьСтрока.Параметры.НомерСтроки=НомерСтроки;
		ОбластьСтрока.Параметры.Сотрудник=Строка(стр.Сотрудник)+" 
		|"+"("+Строка(стр.Должность)+")";
		ОбластьСтрока.Параметры.СотрудникРасшифровка=стр.Сотрудник;
		//Итоги=0;
		для n=1 по ДнейМесяца Цикл 
			ВидВремени=стр["ВидВремени"+Строка(n)];
			Если ВидВремени.Пустая() Тогда 
			БукваВидаВремени="ХХ";
				иначе
			БукваВидаВремени=ВидВремени.БуквенныйКод;
			КонецЕсли;
			Часов=стр["Часов"+Строка(n)];
			Если Часов>0 Тогда 
				ОбластьСтрока.Параметры["Часов"+Строка(n)]=БукваВидаВремени+Строка(Часов);
			иначе
				ОбластьСтрока.Параметры["Часов"+Строка(n)]=БукваВидаВремени;
			КонецЕсли;
			Если ВидВремени=Справочники.ВидыИспользованияРабочегоВремени.ВыходныеДни Тогда 
				ОбластьТекущейЯчейки= ОбластьСтрока.Область("R1"+"C"+Строка(3+N));
				ОбластьТекущейЯчейки.ЦветФона=WebЦвета.Кирпичный;
			ИначеЕсли ВидВремени<>Справочники.ВидыИспользованияРабочегоВремени.РабочееВремя Тогда 
				ОбластьТекущейЯчейки= ОбластьСтрока.Область("R1"+"C"+Строка(3+N));
				ОбластьТекущейЯчейки.ЦветФона=WebЦвета.Желтый;
			КонецЕсли;
			//Итоги=Итоги+Часов;
		КонецЦикла;
		ОбластьСтрока.Параметры.Итоги=Строка(стр.ЧасовПлан)+"/"+Строка(стр.ЧасовФакт);
		ТаблицаТабеля.Вывести(ОбластьСтрока);
	КонецЦикла;
	КонецПроцедуры